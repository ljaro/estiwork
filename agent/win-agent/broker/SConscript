#need glob to get source files
import glob
import os

#create an environment
# env = Environment( MSVC_USE_SCRIPT = os.path.join('c:','Program Files (x86)','Microsoft Visual Studio 10.0','VC','vcvars32.bat') )
env = Environment(MSVC_VERSION='10.0', TARGET_ARCH='x86')
# env.Tool('mssdk')
env.Append( CPPPATH=['d:/boost_1_47_0'])
env.Append( CCFLAGS=['/EHsc'])
env.Append( CCFLAGS=['/MTd'])
env.Append( CCFLAGS=['/Zc:wchar_t'])
env.Append( CCFLAGS=['/D "_MBCS"'])


print env.Dump('ENV')


#target us myprogram.exe
#source is a list of source files

print os.linesep


#############################################
# GENERATE THRIFT FILES
cwd_dir = os.getcwd()
#cpp_gen_path =          os.path.join(cwd_dir,'src','generated')
thrift_input_path =     os.path.join(cwd_dir,'..','thrift_gen','da2dba.thrift')
thrift_compiler_path =  os.path.join(cwd_dir,'..','3rd','tools','thrift-0.9.2.exe')
thrift_inc =            os.path.join(cwd_dir,'..','3rd','thrift-0.9.2','lib','cpp','src')
third_party_dir =       os.path.join(cwd_dir,'..','3rd')


###################################
#
# DOWNLOAD Thrift dep
#SConscript(os.path.join(third_party_dir,'thrift','SConscript'))




#cmd1 = thrift_compiler_path+' -r -o '+cpp_gen_path+' -gen cpp -gen java "'+thrift_input_path+'"'
 
print 'Generating thrift files'
 
# if not os.path.exists(cpp_gen_path):
    # print cpp_gen_path+' does not exist... creating'
    # os.mkdir(cpp_gen_path)
    # if not os.path.exists(cpp_gen_path):
        # raise Exception("Thrift output directory does not exists")
     
if not os.path.exists(thrift_input_path):
    raise Exception("Thrift input file does not exists:"+thrift_input_path)
 
if not os.path.exists(thrift_compiler_path):
    raise Exception("Thrift compiler not found")
 


os.environ['PANTHEIOS_ROOT'] = r'C:\Users\luk\Dysk Google\Projects\Natalis\3rd\pantheios\pantheios-1.0.1-beta216'


libs_paths = []
libs_paths.append( os.path.join('d:/','boost','boost_1_47_0','stage','lib'))
libs_paths.append( os.path.join(third_party_dir,'pantheios','pantheios-1.0.1-beta216','lib'))
libs_paths.append( os.path.join('C:/','Program Files','Microsoft SDKs','Windows','v7.0','Lib'))
libs_paths.append( os.path.join(third_party_dir,'lib'))
libs_paths.append( os.path.join(third_party_dir,'rabbitmq-c','librabbitmq','Debug'))
libs_paths.append( os.path.join('..','thrift_gen'))
libs_paths.append( os.path.join('..','utils'))


libs = []
libs.append('User32')
libs.append('Rpcrt4')
libs.append('libthrift')
libs.append('libthriftnb')
libs.append('thriftgen')
libs.append('rabbitmq.4.lib')
libs.append('WindowsUtils')

libs.append('pantheios.1.be.fprintf.vc10.mt.debug')
libs.append('pantheios.1.bec.fprintf.vc10.mt.debug')
libs.append('pantheios.1.core.vc10.mt.debug')
libs.append('pantheios.1.util.vc10.mt.debug')
libs.append('pantheios.1.be.WindowsConsole.vc10.mt.debug')
libs.append('pantheios.1.bec.WindowsConsole.vc10.mt.debug')
libs.append('pantheios.1.fe.all.vc10.mt.debug')
  
env.Append( CPPPATH=[
	'd:\\boost\\boost_1_47_0', 
	thrift_inc, 
	third_party_dir+'\\pantheios\\pantheios-1.0.1-beta216\\include', 
	third_party_dir+'\\pantheios\\stlsoft-1.9.124\\include', 
	os.path.join(third_party_dir,'rabbitmq-c','librabbitmq')])
	
#env.StaticLibrary('thriftgen', source = source_files)


source_files = glob.glob(os.path.join(cwd_dir,'*.cpp'))
#source_files+= glob.glob(os.path.join(cwd_dir,'utils','*.cpp'))
print os.linesep.join(source_files)


env.Program(target='broker', source = source_files,  LIBPATH=libs_paths, LIBS = libs)










